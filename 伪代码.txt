先有一个结点类，里面含有两个成员：flag（标记结点上是什么棋或没有棋），ifClicked（标记此次点击是表示选取0还是移动1）
class Node{
      int flag, ifClicked;
}

声明并申请一个Node类型二维数组node[][]
用于表示棋盘上的各个点，其中数组的行列代表棋盘上点的位置（两者之间要经过换算）

首先玩家1点击了一个结点，通过结点在窗体里的坐标，换算得到它在数组中的行列位置*

将行列[x][y]和数组首地址传入处理函数

处理函数中先判断此次点击是表示选取还是移动，遍历整个二维数组寻找是否有结点的ifClicked被标记为1

若表示的是选取，即整个二维数组没有任何一个结点的ifClicked为1
if（ 选取 ）{
       有虎或者犬在该位置上的结点，ifClicked变为1；
       空结点不做处理；
} 
若表示移动,只对空结点进行处理，有棋子在上面的结点无法再被其它棋子移动上去
else if ( 移动 ）{
       if ( [x][y].flag == 0 ) {   只对空结点处理
              找到上次点击选取时的结点行列i j，将它的flag赋值给[x][y].flag， [i][j].flag = 0，[i][j].ifClicked = 0；
              if ( [i][j].flag == 2 ) {   如果移动的是虎
                        if*4 ( 周围经过[x][y]的直线上有一对犬 ) {
                                它们将被吃掉，被吃掉的结点的flag变为0；
                      }
              }
       }
      判断输赢；
}





